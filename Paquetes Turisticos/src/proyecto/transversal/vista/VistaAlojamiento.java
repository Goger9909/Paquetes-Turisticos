/*

 */
package proyecto.transversal.vista;

import java.awt.Component;
import java.awt.Graphics;
import java.awt.Image;
import java.sql.DatabaseMetaData;
import java.util.*;
import java.text.SimpleDateFormat;

import java.time.Instant;
import java.time.LocalDate;
import java.time.Month;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import static java.time.temporal.TemporalQueries.localDate;
import java.util.Calendar;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyecto.transversal.accesoADatos.Alojamiento_Data;
import proyecto.transversal.accesoADatos.Ciudad_Data;
import proyecto.transversal.entidades.Alojamiento;
import proyecto.transversal.entidades.Ciudad;

/**
 *
 * @author matia
 */
public class VistaAlojamiento extends javax.swing.JPanel {

    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int filas, int columnas) {
            return false;
        }
    };

    public VistaAlojamiento() {
        initComponents();
        jpVistaBuscar.setEnabled(false);
        jpVistaBuscar.setVisible(false);
        jpVistaNuevoAloja.setEnabled(false);
        jpVistaNuevoAloja.setVisible(false);
        armarCabecera();
//        jdcInicio.setMinSelectableDate(new Date());
//        jdcFin.setMinSelectableDate(jdcInicio.getMinSelectableDate());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageIcon icono= new ImageIcon(getClass().getResource("/imagenes/fondo2.png"));
        Image imagen=icono.getImage();
        jpAlojamiento = new javax.swing.JPanel(){
            public void paintComponent(Graphics g){
                g.drawImage(imagen,0,0,getWidth(),getHeight(),this);
            }

        };
        jpVistaBuscar = new javax.swing.JPanel(){
            public void paintComponent(Graphics g){
                g.drawImage(imagen,0,0,getWidth(),getHeight(),this);
            }
        };
        jpbEditar = new javax.swing.JPanel();
        jlbEditar = new javax.swing.JLabel();
        jpGuardarVB = new javax.swing.JPanel();
        jlbGuardarVB = new javax.swing.JLabel();
        jpbAtrasVB = new javax.swing.JPanel();
        jlbAtrasVB = new javax.swing.JLabel();
        jpBotonBuscarVB = new javax.swing.JPanel();
        jlbBuscarBotonVB = new javax.swing.JLabel();
        jrbPorFechaVB = new javax.swing.JRadioButton();
        jrbTodoVB = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtableBuscar = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtaDescServVB = new javax.swing.JTextArea();
        jlDescServicioVB = new javax.swing.JLabel();
        jtfAlojamientoVB = new javax.swing.JTextField();
        jcbCiudadVB = new javax.swing.JComboBox<>();
        jtfPrecioVB = new javax.swing.JTextField();
        jdcBuscarFechaVB = new com.toedter.calendar.JDateChooser();
        jlPrecioVB = new javax.swing.JLabel();
        jlTipoAlojVB = new javax.swing.JLabel();
        jlCiudadVB = new javax.swing.JLabel();
        jdcInicioVB = new com.toedter.calendar.JDateChooser();
        jdcFinVB = new com.toedter.calendar.JDateChooser();
        jlFechInicioVB = new javax.swing.JLabel();
        jlFechFinVB = new javax.swing.JLabel();
        jpbEliminarVB = new javax.swing.JPanel();
        jlbEliminarVB = new javax.swing.JLabel();
        jlTitulo1 = new javax.swing.JLabel();
        jpVistaNuevoAloja = new javax.swing.JPanel(){
            public void paintComponent(Graphics g){
                g.drawImage(imagen,0,0,getWidth(),getHeight(),this);
            }

        };
        jlTemporada = new javax.swing.JLabel();
        jlInicio = new javax.swing.JLabel();
        jdcInicio = new com.toedter.calendar.JDateChooser();
        jlFin = new javax.swing.JLabel();
        jdcFin = new com.toedter.calendar.JDateChooser();
        jlNombreAlojamiento = new javax.swing.JLabel();
        jlTipo = new javax.swing.JLabel();
        jtfNombreAlojamiento = new javax.swing.JTextField();
        jtfTipo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaDescServicio = new javax.swing.JTextArea();
        jlDescServicio = new javax.swing.JLabel();
        jlPrecio = new javax.swing.JLabel();
        jtfPrecio = new javax.swing.JTextField();
        jpNuevo1 = new javax.swing.JPanel();
        jlNuevo1 = new javax.swing.JLabel();
        jpGuardar1 = new javax.swing.JPanel();
        jlGuardar1 = new javax.swing.JLabel();
        jlEtc = new javax.swing.JLabel();
        jsCantHabitaciones = new javax.swing.JSpinner();
        jlHabitaciones = new javax.swing.JLabel();
        jlCantidadDe = new javax.swing.JLabel();
        jlCiudad = new javax.swing.JLabel();
        jcbCiudad = new javax.swing.JComboBox<>();
        jpAtrasNA = new javax.swing.JPanel();
        jlAtrasNA = new javax.swing.JLabel();
        jpbNuevoAlojamiento = new javax.swing.JPanel();
        jlbNuevoAlojamiento = new javax.swing.JLabel();
        jpbBuscarAlojamiento = new javax.swing.JPanel();
        jlbBuscarAlojamiento = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(600, 700));
        setPreferredSize(new java.awt.Dimension(600, 700));

        jpAlojamiento.setBackground(new java.awt.Color(204, 204, 255));
        jpAlojamiento.setMinimumSize(new java.awt.Dimension(600, 700));
        jpAlojamiento.setPreferredSize(new java.awt.Dimension(600, 700));
        jpAlojamiento.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpVistaBuscar.setBackground(new java.awt.Color(255, 204, 153));
        jpVistaBuscar.setMinimumSize(new java.awt.Dimension(540, 520));
        jpVistaBuscar.setPreferredSize(new java.awt.Dimension(540, 520));
        jpVistaBuscar.setLayout(null);

        jpbEditar.setBackground(new java.awt.Color(0, 0, 102));
        jpbEditar.setPreferredSize(new java.awt.Dimension(100, 30));
        jpbEditar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbEditar.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlbEditar.setForeground(new java.awt.Color(255, 255, 255));
        jlbEditar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbEditar.setText("Editar");
        jlbEditar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlbEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlbEditar.setMaximumSize(new java.awt.Dimension(67, 24));
        jlbEditar.setMinimumSize(new java.awt.Dimension(67, 24));
        jlbEditar.setPreferredSize(new java.awt.Dimension(67, 24));
        jlbEditar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbEditarMouseClicked(evt);
            }
        });
        jpbEditar.add(jlbEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 70));

        jpVistaBuscar.add(jpbEditar);
        jpbEditar.setBounds(470, 300, 100, 70);

        jpGuardarVB.setBackground(new java.awt.Color(0, 0, 102));
        jpGuardarVB.setPreferredSize(new java.awt.Dimension(100, 30));
        jpGuardarVB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbGuardarVB.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlbGuardarVB.setForeground(new java.awt.Color(255, 255, 255));
        jlbGuardarVB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbGuardarVB.setText("Guardar");
        jlbGuardarVB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlbGuardarVB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlbGuardarVB.setMaximumSize(new java.awt.Dimension(67, 24));
        jlbGuardarVB.setMinimumSize(new java.awt.Dimension(67, 24));
        jlbGuardarVB.setPreferredSize(new java.awt.Dimension(67, 24));
        jlbGuardarVB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbGuardarVBMouseClicked(evt);
            }
        });
        jpGuardarVB.add(jlbGuardarVB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 50));

        jpVistaBuscar.add(jpGuardarVB);
        jpGuardarVB.setBounds(400, 500, 170, 50);

        jpbAtrasVB.setBackground(new java.awt.Color(0, 0, 102));
        jpbAtrasVB.setPreferredSize(new java.awt.Dimension(100, 30));
        jpbAtrasVB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbAtrasVB.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlbAtrasVB.setForeground(new java.awt.Color(255, 255, 255));
        jlbAtrasVB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbAtrasVB.setText("Atras");
        jlbAtrasVB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlbAtrasVB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlbAtrasVB.setMaximumSize(new java.awt.Dimension(67, 24));
        jlbAtrasVB.setMinimumSize(new java.awt.Dimension(67, 24));
        jlbAtrasVB.setPreferredSize(new java.awt.Dimension(67, 24));
        jlbAtrasVB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbAtrasVBMouseClicked(evt);
            }
        });
        jpbAtrasVB.add(jlbAtrasVB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 110, 30));

        jpVistaBuscar.add(jpbAtrasVB);
        jpbAtrasVB.setBounds(460, 580, 110, 30);

        jpBotonBuscarVB.setBackground(new java.awt.Color(0, 0, 102));
        jpBotonBuscarVB.setPreferredSize(new java.awt.Dimension(100, 30));
        jpBotonBuscarVB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbBuscarBotonVB.setBackground(new java.awt.Color(0, 0, 102));
        jlbBuscarBotonVB.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlbBuscarBotonVB.setForeground(new java.awt.Color(255, 255, 255));
        jlbBuscarBotonVB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbBuscarBotonVB.setText("Buscar");
        jlbBuscarBotonVB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlbBuscarBotonVB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlbBuscarBotonVB.setMaximumSize(new java.awt.Dimension(67, 24));
        jlbBuscarBotonVB.setMinimumSize(new java.awt.Dimension(67, 24));
        jlbBuscarBotonVB.setPreferredSize(new java.awt.Dimension(67, 24));
        jlbBuscarBotonVB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbBuscarBotonVBMouseClicked(evt);
            }
        });
        jpBotonBuscarVB.add(jlbBuscarBotonVB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 30));

        jpVistaBuscar.add(jpBotonBuscarVB);
        jpBotonBuscarVB.setBounds(470, 30, 100, 30);

        jrbPorFechaVB.setForeground(new java.awt.Color(255, 255, 255));
        jrbPorFechaVB.setText("POR FECHA PROXIMA");
        jrbPorFechaVB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbPorFechaVBActionPerformed(evt);
            }
        });
        jpVistaBuscar.add(jrbPorFechaVB);
        jrbPorFechaVB.setBounds(110, 40, 140, 23);

        jrbTodoVB.setForeground(new java.awt.Color(255, 255, 255));
        jrbTodoVB.setText("TODO");
        jrbTodoVB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodoVBActionPerformed(evt);
            }
        });
        jpVistaBuscar.add(jrbTodoVB);
        jrbTodoVB.setBounds(30, 40, 70, 23);

        jtableBuscar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtableBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtableBuscarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtableBuscar);

        jpVistaBuscar.add(jScrollPane1);
        jScrollPane1.setBounds(30, 70, 540, 180);

        jtaDescServVB.setColumns(20);
        jtaDescServVB.setRows(5);
        jScrollPane3.setViewportView(jtaDescServVB);

        jpVistaBuscar.add(jScrollPane3);
        jScrollPane3.setBounds(30, 320, 180, 230);

        jlDescServicioVB.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlDescServicioVB.setText("Descripcion del Servicio:");
        jpVistaBuscar.add(jlDescServicioVB);
        jlDescServicioVB.setBounds(30, 300, 178, 18);
        jpVistaBuscar.add(jtfAlojamientoVB);
        jtfAlojamientoVB.setBounds(230, 400, 340, 30);

        jpVistaBuscar.add(jcbCiudadVB);
        jcbCiudadVB.setBounds(230, 460, 340, 30);
        jpVistaBuscar.add(jtfPrecioVB);
        jtfPrecioVB.setBounds(230, 520, 140, 30);
        jpVistaBuscar.add(jdcBuscarFechaVB);
        jdcBuscarFechaVB.setBounds(320, 30, 140, 30);

        jlPrecioVB.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlPrecioVB.setText("Precio:");
        jpVistaBuscar.add(jlPrecioVB);
        jlPrecioVB.setBounds(230, 500, 50, 18);

        jlTipoAlojVB.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlTipoAlojVB.setText("Alojamiento:");
        jpVistaBuscar.add(jlTipoAlojVB);
        jlTipoAlojVB.setBounds(230, 380, 86, 18);

        jlCiudadVB.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlCiudadVB.setText("Ciudad:");
        jpVistaBuscar.add(jlCiudadVB);
        jlCiudadVB.setBounds(230, 440, 54, 18);

        jdcInicioVB.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcInicioVBPropertyChange(evt);
            }
        });
        jpVistaBuscar.add(jdcInicioVB);
        jdcInicioVB.setBounds(290, 300, 120, 30);
        jpVistaBuscar.add(jdcFinVB);
        jdcFinVB.setBounds(290, 340, 120, 30);

        jlFechInicioVB.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlFechInicioVB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlFechInicioVB.setText("Inicio:");
        jpVistaBuscar.add(jlFechInicioVB);
        jlFechInicioVB.setBounds(230, 310, 50, 20);

        jlFechFinVB.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlFechFinVB.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jlFechFinVB.setText("Fin:");
        jpVistaBuscar.add(jlFechFinVB);
        jlFechFinVB.setBounds(230, 350, 50, 20);

        jpbEliminarVB.setBackground(new java.awt.Color(0, 0, 102));
        jpbEliminarVB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbEliminarVB.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlbEliminarVB.setForeground(new java.awt.Color(255, 255, 255));
        jlbEliminarVB.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbEliminarVB.setText("Eliminar");
        jlbEliminarVB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlbEliminarVB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlbEliminarVB.setMaximumSize(new java.awt.Dimension(67, 24));
        jlbEliminarVB.setMinimumSize(new java.awt.Dimension(67, 24));
        jlbEliminarVB.setPreferredSize(new java.awt.Dimension(67, 24));
        jlbEliminarVB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbEliminarVBMouseClicked(evt);
            }
        });
        jpbEliminarVB.add(jlbEliminarVB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 110, 30));

        jpVistaBuscar.add(jpbEliminarVB);
        jpbEliminarVB.setBounds(30, 580, 110, 30);

        jpAlojamiento.add(jpVistaBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 600, 630));

        jlTitulo1.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        jlTitulo1.setForeground(new java.awt.Color(255, 255, 255));
        jlTitulo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlTitulo1.setText("ALOJAMIENTO");
        jpAlojamiento.add(jlTitulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 30, 260, 20));

        jpVistaNuevoAloja.setBackground(new java.awt.Color(204, 255, 204));
        jpVistaNuevoAloja.setPreferredSize(new java.awt.Dimension(540, 600));
        jpVistaNuevoAloja.setLayout(null);

        jlTemporada.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlTemporada.setForeground(new java.awt.Color(255, 255, 255));
        jlTemporada.setText("Temporada:");
        jpVistaNuevoAloja.add(jlTemporada);
        jlTemporada.setBounds(50, 20, 106, 22);

        jlInicio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlInicio.setForeground(new java.awt.Color(255, 255, 255));
        jlInicio.setText("Inicio:");
        jpVistaNuevoAloja.add(jlInicio);
        jlInicio.setBounds(90, 70, 42, 18);

        jdcInicio.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jdcInicio.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jdcInicioPropertyChange(evt);
            }
        });
        jpVistaNuevoAloja.add(jdcInicio);
        jdcInicio.setBounds(140, 60, 150, 30);

        jlFin.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlFin.setForeground(new java.awt.Color(255, 255, 255));
        jlFin.setText("Fin:");
        jpVistaNuevoAloja.add(jlFin);
        jlFin.setBounds(350, 70, 30, 20);

        jdcFin.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jpVistaNuevoAloja.add(jdcFin);
        jdcFin.setBounds(380, 60, 150, 30);

        jlNombreAlojamiento.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlNombreAlojamiento.setForeground(new java.awt.Color(255, 255, 255));
        jlNombreAlojamiento.setText("Nombre de Alojamiento:");
        jpVistaNuevoAloja.add(jlNombreAlojamiento);
        jlNombreAlojamiento.setBounds(50, 140, 168, 18);

        jlTipo.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlTipo.setForeground(new java.awt.Color(255, 255, 255));
        jlTipo.setText("Tipo:");
        jpVistaNuevoAloja.add(jlTipo);
        jlTipo.setBounds(120, 190, 40, 18);

        jtfNombreAlojamiento.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfNombreAlojamiento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfNombreAlojamientoKeyTyped(evt);
            }
        });
        jpVistaNuevoAloja.add(jtfNombreAlojamiento);
        jtfNombreAlojamiento.setBounds(230, 130, 320, 30);

        jtfTipo.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfTipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfTipoKeyTyped(evt);
            }
        });
        jpVistaNuevoAloja.add(jtfTipo);
        jtfTipo.setBounds(230, 180, 320, 30);

        jtaDescServicio.setColumns(20);
        jtaDescServicio.setRows(5);
        jScrollPane2.setViewportView(jtaDescServicio);

        jpVistaNuevoAloja.add(jScrollPane2);
        jScrollPane2.setBounds(40, 320, 260, 210);

        jlDescServicio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlDescServicio.setText("Descripcion del Servicio:");
        jpVistaNuevoAloja.add(jlDescServicio);
        jlDescServicio.setBounds(50, 300, 178, 18);

        jlPrecio.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlPrecio.setText("Precio:");
        jpVistaNuevoAloja.add(jlPrecio);
        jlPrecio.setBounds(320, 330, 50, 18);

        jtfPrecio.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtfPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfPrecioKeyTyped(evt);
            }
        });
        jpVistaNuevoAloja.add(jtfPrecio);
        jtfPrecio.setBounds(390, 320, 160, 30);

        jpNuevo1.setBackground(new java.awt.Color(0, 0, 102));
        jpNuevo1.setPreferredSize(new java.awt.Dimension(100, 30));

        jlNuevo1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlNuevo1.setForeground(new java.awt.Color(255, 255, 255));
        jlNuevo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlNuevo1.setText("Nuevo");
        jlNuevo1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlNuevo1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlNuevo1.setMaximumSize(new java.awt.Dimension(67, 24));
        jlNuevo1.setMinimumSize(new java.awt.Dimension(67, 24));
        jlNuevo1.setPreferredSize(new java.awt.Dimension(67, 24));
        jlNuevo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlNuevo1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpNuevo1Layout = new javax.swing.GroupLayout(jpNuevo1);
        jpNuevo1.setLayout(jpNuevo1Layout);
        jpNuevo1Layout.setHorizontalGroup(
            jpNuevo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlNuevo1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        jpNuevo1Layout.setVerticalGroup(
            jpNuevo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpNuevo1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jlNuevo1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpVistaNuevoAloja.add(jpNuevo1);
        jpNuevo1.setBounds(40, 570, 110, 30);

        jpGuardar1.setBackground(new java.awt.Color(0, 0, 102));
        jpGuardar1.setPreferredSize(new java.awt.Dimension(100, 30));

        jlGuardar1.setBackground(new java.awt.Color(255, 255, 255));
        jlGuardar1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlGuardar1.setForeground(new java.awt.Color(255, 255, 255));
        jlGuardar1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlGuardar1.setText("Guardar");
        jlGuardar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlGuardar1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlGuardar1.setMaximumSize(new java.awt.Dimension(67, 24));
        jlGuardar1.setMinimumSize(new java.awt.Dimension(67, 24));
        jlGuardar1.setPreferredSize(new java.awt.Dimension(67, 24));
        jlGuardar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlGuardar1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpGuardar1Layout = new javax.swing.GroupLayout(jpGuardar1);
        jpGuardar1.setLayout(jpGuardar1Layout);
        jpGuardar1Layout.setHorizontalGroup(
            jpGuardar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlGuardar1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
        );
        jpGuardar1Layout.setVerticalGroup(
            jpGuardar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpGuardar1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jlGuardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpVistaNuevoAloja.add(jpGuardar1);
        jpGuardar1.setBounds(390, 480, 160, 50);

        jlEtc.setFont(new java.awt.Font("Arial", 1, 10)); // NOI18N
        jlEtc.setForeground(new java.awt.Color(255, 255, 255));
        jlEtc.setText("(Hotel, Dpto, Casa, etc.)");
        jpVistaNuevoAloja.add(jlEtc);
        jlEtc.setBounds(80, 210, 114, 13);

        jsCantHabitaciones.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        jpVistaNuevoAloja.add(jsCantHabitaciones);
        jsCantHabitaciones.setBounds(430, 410, 70, 30);

        jlHabitaciones.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlHabitaciones.setText("Habitaciones:");
        jpVistaNuevoAloja.add(jlHabitaciones);
        jlHabitaciones.setBounds(320, 420, 96, 18);

        jlCantidadDe.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlCantidadDe.setText("Cantidad de");
        jpVistaNuevoAloja.add(jlCantidadDe);
        jlCantidadDe.setBounds(320, 400, 85, 18);

        jlCiudad.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jlCiudad.setForeground(new java.awt.Color(255, 255, 255));
        jlCiudad.setText("Ciudad:");
        jpVistaNuevoAloja.add(jlCiudad);
        jlCiudad.setBounds(110, 250, 54, 18);

        jpVistaNuevoAloja.add(jcbCiudad);
        jcbCiudad.setBounds(230, 240, 320, 30);

        jpAtrasNA.setBackground(new java.awt.Color(0, 0, 102));
        jpAtrasNA.setPreferredSize(new java.awt.Dimension(100, 30));

        jlAtrasNA.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlAtrasNA.setForeground(new java.awt.Color(255, 255, 255));
        jlAtrasNA.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlAtrasNA.setText("Atras");
        jlAtrasNA.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlAtrasNA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlAtrasNA.setMaximumSize(new java.awt.Dimension(67, 24));
        jlAtrasNA.setMinimumSize(new java.awt.Dimension(67, 24));
        jlAtrasNA.setPreferredSize(new java.awt.Dimension(67, 24));
        jlAtrasNA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlAtrasNAMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jpAtrasNALayout = new javax.swing.GroupLayout(jpAtrasNA);
        jpAtrasNA.setLayout(jpAtrasNALayout);
        jpAtrasNALayout.setHorizontalGroup(
            jpAtrasNALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlAtrasNA, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        jpAtrasNALayout.setVerticalGroup(
            jpAtrasNALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAtrasNALayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jlAtrasNA, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpVistaNuevoAloja.add(jpAtrasNA);
        jpAtrasNA.setBounds(440, 570, 110, 30);

        jpAlojamiento.add(jpVistaNuevoAloja, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 600, 630));

        jpbNuevoAlojamiento.setBackground(new java.awt.Color(0, 0, 102));
        jpbNuevoAlojamiento.setPreferredSize(new java.awt.Dimension(100, 30));
        jpbNuevoAlojamiento.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbNuevoAlojamiento.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlbNuevoAlojamiento.setForeground(new java.awt.Color(255, 255, 255));
        jlbNuevoAlojamiento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbNuevoAlojamiento.setText("Agregar Alojamiento");
        jlbNuevoAlojamiento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlbNuevoAlojamiento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlbNuevoAlojamiento.setMaximumSize(new java.awt.Dimension(67, 24));
        jlbNuevoAlojamiento.setMinimumSize(new java.awt.Dimension(67, 24));
        jlbNuevoAlojamiento.setPreferredSize(new java.awt.Dimension(67, 24));
        jlbNuevoAlojamiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbNuevoAlojamientoMouseClicked(evt);
            }
        });
        jpbNuevoAlojamiento.add(jlbNuevoAlojamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 90));

        jpAlojamiento.add(jpbNuevoAlojamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 230, 90));

        jpbBuscarAlojamiento.setBackground(new java.awt.Color(0, 0, 102));
        jpbBuscarAlojamiento.setPreferredSize(new java.awt.Dimension(100, 30));
        jpbBuscarAlojamiento.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jlbBuscarAlojamiento.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jlbBuscarAlojamiento.setForeground(new java.awt.Color(255, 255, 255));
        jlbBuscarAlojamiento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbBuscarAlojamiento.setText("Buscar Alojamiento");
        jlbBuscarAlojamiento.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jlbBuscarAlojamiento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jlbBuscarAlojamiento.setMaximumSize(new java.awt.Dimension(67, 24));
        jlbBuscarAlojamiento.setMinimumSize(new java.awt.Dimension(67, 24));
        jlbBuscarAlojamiento.setPreferredSize(new java.awt.Dimension(67, 24));
        jlbBuscarAlojamiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlbBuscarAlojamientoMouseClicked(evt);
            }
        });
        jpbBuscarAlojamiento.add(jlbBuscarAlojamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 90));

        jpAlojamiento.add(jpbBuscarAlojamiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 230, 90));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jpAlojamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 700, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jpAlojamiento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents
    //------------ PESTAÑA NuevoAlojamiento NOMBRE-ALOJAMIENTO ------------
    private void jtfNombreAlojamientoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNombreAlojamientoKeyTyped
        int key = evt.getKeyChar();
        boolean letrasMin = key >= 97 && key <= 122;
        boolean letrasMay = key >= 65 && key <= 90;
        boolean espacio = key == 32;
        boolean caracteres = key == 39; //apostrofe
        boolean enie = key == 209 || key == 241;
        if (!(letrasMin || letrasMay || espacio || caracteres || enie)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfNombreAlojamientoKeyTyped

    private void jtfTipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTipoKeyTyped
        int key = evt.getKeyChar();
        boolean letrasMin = key >= 97 && key <= 122 || key == 164;
        boolean letrasMay = key >= 65 && key <= 90 || key == 165;
        boolean enie = key == 209 || key == 241;
        if (!(letrasMin || letrasMay || enie)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfTipoKeyTyped

    private void jlGuardar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlGuardar1MouseClicked

        Date fIni = jdcInicio.getDate();
        Date fFin = jdcFin.getDate();
        Date minimo = jdcInicio.getMinSelectableDate();
        Date maximo = jdcInicio.getMaxSelectableDate();
        Date minimo2 = jdcFin.getMinSelectableDate();
        Date maximo2 = jdcFin.getMaxSelectableDate();

        try {
            if (fIni != null) {
                // Verificar si la fecha seleccionada está dentro del rango permitido
                if (minimo != null && maximo != null) {
                    if (fIni.before(minimo) || fIni.after(maximo)) {
                        JOptionPane.showMessageDialog(null, "La fecha seleccionada no esta permitida");
                        jdcInicio.setDate(null);
                        jdcFin.setDate(null);
                        return;
                    }
                }
            }
            if (fFin != null) {
                // Verificar si la fecha seleccionada está dentro del rango permitido
                if (minimo2 != null && maximo2 != null) {
                    if (fFin.before(minimo2) || fFin.after(maximo2)) {
                        JOptionPane.showMessageDialog(null, "La fecha seleccionada no esta permitida");
                        jdcFin.setDate(null);

                        return;
                    }
                }
            }

            java.util.Date fecha1 = jdcInicio.getDate();
            Instant instant = fecha1.toInstant();
            LocalDate fe1 = instant.atZone(ZoneId.systemDefault()).toLocalDate();

            java.util.Date fecha2 = jdcFin.getDate();
            Instant inst = fecha2.toInstant();
            LocalDate fe2 = inst.atZone(ZoneId.systemDefault()).toLocalDate();
//            System.out.println("fecha1 parse: "+fecha1);
//            System.out.println("fecha2 parse: "+fecha2);
//            System.out.println("fe1: "+fe1);
//            System.out.println("fe2: "+fe2);
            String tipo = jtfTipo.getText() + " - " + jtfNombreAlojamiento.getText();
//            System.out.println("tipo concat: "+tipo);
            Ciudad ciu = (Ciudad) jcbCiudad.getSelectedItem();
//            System.out.println("cbx: " + ciu);

            String servicio = jtaDescServicio.getText();
//            System.out.println("descripcion: "+servicio);

//            System.out.println("Precio sin parse: "+ jtfPrecio.getText());
            String num = jtfPrecio.getText();
            double importe = Double.parseDouble(num);
            int contador = (Integer) jsCantHabitaciones.getValue();
//            System.out.println("importe parse:"+ importe);
//            System.out.println("importe: " + importe);
            Alojamiento al = new Alojamiento(fe1, fe2, tipo, servicio, true, importe, ciu);
//            System.out.println("importe parse:"+ al);
            Alojamiento_Data ad = new Alojamiento_Data();
            int vuelta = 0;
            for (int i = 1; i <= contador; i++) {
                //ad.guardarAlojamiento(al);
                vuelta = vuelta + 1;
                System.out.println("aloja: " + al);
            }
            
            JOptionPane.showMessageDialog(null, "Se guardaron " + vuelta + " registros.");
        } catch (NullPointerException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
            return;
        }

        //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    }//GEN-LAST:event_jlGuardar1MouseClicked

    private void jlbAtrasVBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbAtrasVBMouseClicked

        jpVistaBuscar.setEnabled(false);
        jpVistaBuscar.setVisible(false);
        botonBuscarAlojACT();
        botonNuevoAlojACT();

        jrbTodoVB.setSelected(true);

        jtaDescServVB.setEditable(false);
        jdcInicioVB.setEnabled(false);
        jdcFinVB.setEnabled(false);
        jtfAlojamientoVB.setEditable(false);
        jtfPrecioVB.setEditable(false);
    }//GEN-LAST:event_jlbAtrasVBMouseClicked
    // --------- Boton NuevoAlojamiento JT ALOJAMIENTO ---------
    private void jlbNuevoAlojamientoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbNuevoAlojamientoMouseClicked
        jpVistaNuevoAloja.setEnabled(true);
        jpVistaNuevoAloja.setVisible(true);
        jdcInicio.setMinSelectableDate(new Date());
        cargarComboCiudad();

        botonBuscarAlojDES();
        botonNuevoAlojDES();
    }//GEN-LAST:event_jlbNuevoAlojamientoMouseClicked
    // --------- Boton BuscarAlojamiento JT ALOJAMIENTO ---------
    private void jlbBuscarAlojamientoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbBuscarAlojamientoMouseClicked
        jpVistaBuscar.setEnabled(true);
        jpVistaBuscar.setVisible(true);
        botonBuscarAlojDES();
        botonNuevoAlojDES();

        jtaDescServVB.setEditable(false);
        jdcInicioVB.setEnabled(false);
        jdcFinVB.setEnabled(false);
        jtfAlojamientoVB.setEditable(false);
        jtfPrecioVB.setEditable(false);
        jcbCiudadVB.setEnabled(false);

    }//GEN-LAST:event_jlbBuscarAlojamientoMouseClicked
    // --------- Boton Atras JTABLA NuevoAlojamiento ---------
    private void jlAtrasNAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlAtrasNAMouseClicked
        jpVistaNuevoAloja.setEnabled(false);
        jpVistaNuevoAloja.setVisible(false);
        botonBuscarAlojACT();
        botonNuevoAlojACT();

    }//GEN-LAST:event_jlAtrasNAMouseClicked

    private void jtfPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPrecioKeyTyped
        int key = evt.getKeyChar();
        boolean numeros = key >= 48 && key <= 57;
        boolean punto = key == 46; //punto 46 , coma 44
        if (!(numeros || punto)) {
            evt.consume();
        }
    }//GEN-LAST:event_jtfPrecioKeyTyped

    private void jlNuevo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlNuevo1MouseClicked

        jdcInicio.setCalendar(null);
        jdcFin.setCalendar(null);
        jcbCiudad.removeAllItems();
        cargarComboCiudad();
        jtfNombreAlojamiento.setText("");
        jtfTipo.setText("");
        jtaDescServicio.setText("");
        jtfPrecio.setText("");
        jsCantHabitaciones.setValue(1);

    }//GEN-LAST:event_jlNuevo1MouseClicked

    private void jrbPorFechaVBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbPorFechaVBActionPerformed
        jrbTodoVB.setSelected(false);
        jdcBuscarFechaVB.setEnabled(true);
    }//GEN-LAST:event_jrbPorFechaVBActionPerformed

    private void jrbTodoVBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodoVBActionPerformed
        jrbPorFechaVB.setSelected(false);
        jdcBuscarFechaVB.setEnabled(false);
    }//GEN-LAST:event_jrbTodoVBActionPerformed

    private void jlbEditarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbEditarMouseClicked

        if (jlbEditar.getText().equals("Editar")) {
            jlbEditar.setText("Cancelar");
            jtaDescServVB.setEditable(true);
            jdcInicioVB.setEnabled(true);
            jdcFinVB.setEnabled(true);
            jtfAlojamientoVB.setEditable(true);
            jtfPrecioVB.setEditable(true);
            jcbCiudadVB.setEnabled(true);
            jcbCiudadVB.removeAllItems();
            cargarComboCiudadVB();
        }else 
        if (jlbEditar.getText().equals("Cancelar")) {
            jlbEditar.setText("Editar");
            jtaDescServVB.setEditable(false);
            jdcInicioVB.setEnabled(false);
            jdcFinVB.setEnabled(false);
            jtfAlojamientoVB.setEditable(false);
            jtfPrecioVB.setEditable(false);
            jcbCiudadVB.setEnabled(false);
            jcbCiudadVB.removeAll();
            int filaSeleccionada = jtableBuscar.getSelectedRow();
            Ciudad ciudadDest = (Ciudad) jtableBuscar.getValueAt(filaSeleccionada, 4);
            jcbCiudadVB.addItem(ciudadDest);
            
        }
    }//GEN-LAST:event_jlbEditarMouseClicked

    private void jlbGuardarVBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbGuardarVBMouseClicked
       
        Date fIni = jdcInicioVB.getDate();
        Date fFin = jdcFinVB.getDate();
        Date minimo = jdcInicioVB.getMinSelectableDate();
        Date maximo = jdcInicioVB.getMaxSelectableDate();
        Date minimo2 = jdcFinVB.getMinSelectableDate();
        Date maximo2 = jdcInicioVB.getMaxSelectableDate();

        try {
            if (fIni != null) {
                // Verificar si la fecha seleccionada está dentro del rango permitido
                if (minimo != null && maximo != null) {
                    if (fIni.before(minimo) || fIni.after(maximo)) {
                        JOptionPane.showMessageDialog(null, "La fecha seleccionada no esta permitida");
                        jdcInicioVB.setDate(null);
                        jdcFinVB.setDate(null);
                        return;
                    }
                }
            }
            if (fFin != null) {
                // Verificar si la fecha seleccionada está dentro del rango permitido
                if (minimo2 != null && maximo2 != null) {
                    if (fFin.before(minimo2) || fFin.after(maximo2)) {
                        JOptionPane.showMessageDialog(null, "La fecha seleccionada no esta permitida");
                        jdcFinVB.setDate(null);

                        return;
                    }
                }
            }

            java.util.Date fecha1 = jdcInicioVB.getDate();
            Instant instant = fecha1.toInstant();
            LocalDate fe1 = instant.atZone(ZoneId.systemDefault()).toLocalDate();

            java.util.Date fecha2 = jdcFinVB.getDate();
            Instant inst = fecha2.toInstant();
            LocalDate fe2 = inst.atZone(ZoneId.systemDefault()).toLocalDate();
                System.out.println("fe1: "+fe1);
                System.out.println("fe2: "+fe2);
            int filaSeleccionada = jtableBuscar.getSelectedRow();
            int idAloj = (Integer) jtableBuscar.getValueAt(filaSeleccionada, 0);
                System.out.println("id: "+idAloj);
            String tipoAlojamiento = jtfAlojamientoVB.getText();
                System.out.println("Aloja: "+tipoAlojamiento);
            Ciudad ciudadDest = (Ciudad) jcbCiudadVB.getSelectedItem();
                System.out.println("ciudad"+ ciudadDest);
            double importeDiario = Double.parseDouble(jtfPrecioVB.getText());
                System.out.println("double:"+ importeDiario);
            boolean estado = (Boolean) jtableBuscar.getValueAt(filaSeleccionada, 6);
                System.out.println("estado: "+ estado);
            String servicio = (String) jtaDescServVB.getText();
                System.out.println("servicio"+servicio);
            
            Alojamiento al = new Alojamiento(idAloj, fe1, fe2, tipoAlojamiento, servicio, estado, importeDiario, ciudadDest);
//           
            Alojamiento_Data ad = new Alojamiento_Data();
            ad.modificarAlojamiento(al);
            
//            JOptionPane.showMessageDialog(null, "Se guardo el registro");
        } catch (NullPointerException | NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Complete todos los campos");
            return;
        }
        
    }//GEN-LAST:event_jlbGuardarVBMouseClicked

    private void jlbEliminarVBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbEliminarVBMouseClicked
        
        
        
        
    }//GEN-LAST:event_jlbEliminarVBMouseClicked
// --------- LISTENER DE JDATECHOOSER INICIO ------------------
    private void jdcInicioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcInicioPropertyChange

        jdcFin.setMinSelectableDate(jdcInicio.getDate());

    }//GEN-LAST:event_jdcInicioPropertyChange

    private void jlbBuscarBotonVBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlbBuscarBotonVBMouseClicked

        if (jrbTodoVB.isSelected()) {
            borrarFilas();
            cargarDatosCompleto();
        } else if (jrbPorFechaVB.isSelected()) {
            if (jdcBuscarFechaVB.getDate() != null) {
                java.util.Date fecha = jdcBuscarFechaVB.getDate();
                Instant instant = fecha.toInstant();
                LocalDate fechaVB = instant.atZone(ZoneId.systemDefault()).toLocalDate();

                borrarFilas();
                cargarDatosPorFecha(fechaVB);
            } else {
                JOptionPane.showMessageDialog(null, "Seleccione una fecha");

            }
        } else {

        }

    }//GEN-LAST:event_jlbBuscarBotonVBMouseClicked

    private void jtableBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtableBuscarMouseClicked
        jcbCiudadVB.removeAllItems();
        int filaSeleccionada = jtableBuscar.getSelectedRow();
        if (filaSeleccionada != -1) {

            int idAloj = (Integer) jtableBuscar.getValueAt(filaSeleccionada, 0);
            String tipoAlojamiento = (String) jtableBuscar.getValueAt(filaSeleccionada, 1);
            LocalDate fechaIn = (LocalDate) jtableBuscar.getValueAt(filaSeleccionada, 2);
            LocalDate fechaOn = (LocalDate) jtableBuscar.getValueAt(filaSeleccionada, 3);
            Ciudad ciudadDest = (Ciudad) jtableBuscar.getValueAt(filaSeleccionada, 4);
            double importeDiario = (Double) jtableBuscar.getValueAt(filaSeleccionada, 5);
            boolean estado = (Boolean) jtableBuscar.getValueAt(filaSeleccionada, 6);
            String servicio = (String) jtableBuscar.getValueAt(filaSeleccionada, 7);

            jtfAlojamientoVB.setText(tipoAlojamiento);
            jdcInicioVB.setDate(java.sql.Date.valueOf(fechaIn));
            jdcFinVB.setDate(java.sql.Date.valueOf(fechaOn));
            jtfPrecioVB.setText(String.valueOf(importeDiario));
            jtaDescServVB.setText(servicio);
            jcbCiudadVB.addItem(ciudadDest);

        }


    }//GEN-LAST:event_jtableBuscarMouseClicked

    private void jdcInicioVBPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jdcInicioVBPropertyChange
        jdcFinVB.setMinSelectableDate(jdcInicioVB.getDate());
    }//GEN-LAST:event_jdcInicioVBPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<Ciudad> jcbCiudad;
    private javax.swing.JComboBox<Ciudad> jcbCiudadVB;
    private com.toedter.calendar.JDateChooser jdcBuscarFechaVB;
    private com.toedter.calendar.JDateChooser jdcFin;
    private com.toedter.calendar.JDateChooser jdcFinVB;
    private com.toedter.calendar.JDateChooser jdcInicio;
    private com.toedter.calendar.JDateChooser jdcInicioVB;
    private javax.swing.JLabel jlAtrasNA;
    private javax.swing.JLabel jlCantidadDe;
    private javax.swing.JLabel jlCiudad;
    private javax.swing.JLabel jlCiudadVB;
    private javax.swing.JLabel jlDescServicio;
    private javax.swing.JLabel jlDescServicioVB;
    private javax.swing.JLabel jlEtc;
    private javax.swing.JLabel jlFechFinVB;
    private javax.swing.JLabel jlFechInicioVB;
    private javax.swing.JLabel jlFin;
    private javax.swing.JLabel jlGuardar1;
    private javax.swing.JLabel jlHabitaciones;
    private javax.swing.JLabel jlInicio;
    private javax.swing.JLabel jlNombreAlojamiento;
    private javax.swing.JLabel jlNuevo1;
    private javax.swing.JLabel jlPrecio;
    private javax.swing.JLabel jlPrecioVB;
    private javax.swing.JLabel jlTemporada;
    private javax.swing.JLabel jlTipo;
    private javax.swing.JLabel jlTipoAlojVB;
    private javax.swing.JLabel jlTitulo1;
    private javax.swing.JLabel jlbAtrasVB;
    private javax.swing.JLabel jlbBuscarAlojamiento;
    private javax.swing.JLabel jlbBuscarBotonVB;
    private javax.swing.JLabel jlbEditar;
    private javax.swing.JLabel jlbEliminarVB;
    private javax.swing.JLabel jlbGuardarVB;
    private javax.swing.JLabel jlbNuevoAlojamiento;
    private javax.swing.JPanel jpAlojamiento;
    private javax.swing.JPanel jpAtrasNA;
    private javax.swing.JPanel jpBotonBuscarVB;
    private javax.swing.JPanel jpGuardar1;
    private javax.swing.JPanel jpGuardarVB;
    private javax.swing.JPanel jpNuevo1;
    private javax.swing.JPanel jpVistaBuscar;
    private javax.swing.JPanel jpVistaNuevoAloja;
    private javax.swing.JPanel jpbAtrasVB;
    private javax.swing.JPanel jpbBuscarAlojamiento;
    private javax.swing.JPanel jpbEditar;
    private javax.swing.JPanel jpbEliminarVB;
    private javax.swing.JPanel jpbNuevoAlojamiento;
    private javax.swing.JRadioButton jrbPorFechaVB;
    private javax.swing.JRadioButton jrbTodoVB;
    private javax.swing.JSpinner jsCantHabitaciones;
    private javax.swing.JTextArea jtaDescServVB;
    private javax.swing.JTextArea jtaDescServicio;
    private javax.swing.JTable jtableBuscar;
    private javax.swing.JTextField jtfAlojamientoVB;
    private javax.swing.JTextField jtfNombreAlojamiento;
    private javax.swing.JTextField jtfPrecio;
    private javax.swing.JTextField jtfPrecioVB;
    private javax.swing.JTextField jtfTipo;
    // End of variables declaration//GEN-END:variables

    private void cargarComboCiudad() {

        Ciudad_Data cd = new Ciudad_Data();
        for (Ciudad ciudad : cd.obtenerCiudad()) {
            jcbCiudad.addItem(ciudad);

        }
    }

    private void cargarComboCiudadVB() {

        Ciudad_Data cd = new Ciudad_Data();
        for (Ciudad ciudad : cd.obtenerCiudad()) {

            jcbCiudadVB.addItem(ciudad);
        }
    }

    // --------- JPB NUEVO ALOJ ------------------------
    private void botonNuevoAlojACT() {
        for (Component comp : jpbNuevoAlojamiento.getComponents()) {
            comp.setEnabled(true);
            comp.setVisible(true);
        }
    }

    private void botonNuevoAlojDES() {
        for (Component comp : jpbNuevoAlojamiento.getComponents()) {
            comp.setEnabled(false);
            comp.setVisible(false);
        }
    }

    // --------- JPB BUSCAR ALOJ ------------------------
    private void botonBuscarAlojACT() {
        for (Component comp : jpbBuscarAlojamiento.getComponents()) {
            comp.setEnabled(true);
            comp.setVisible(true);
        }
    }

    private void botonBuscarAlojDES() {
        for (Component comp : jpbBuscarAlojamiento.getComponents()) {
            comp.setEnabled(false);
            comp.setVisible(false);
        }
    }

    private void cambiofecha() {
        if (jdcInicio != null) {
            jdcFin.setMinSelectableDate(jdcInicio.getDate());
        }

    }

// -------- METODOS jpVistaBuscar -----------------
    //-------- Tabla --------
    private void armarCabecera() {
        modelo.addColumn("ID");
        modelo.addColumn("Alojamiento");
        modelo.addColumn("Fecha Inicio");
        modelo.addColumn("Fecha Salida");
        modelo.addColumn("Ciudad");
        modelo.addColumn("Importe");
        modelo.addColumn("Estado");
        modelo.addColumn("Servicio");
        jtableBuscar.setModel(modelo);
    }

    private void cargarDatosCompleto() {
        Alojamiento_Data ald = new Alojamiento_Data();
        for (Alojamiento alojam : ald.buscarAlojamientoCompleto()) {
            modelo.addRow(new Object[]{alojam.getIdAlojamiento(), alojam.getTipoAlojamiento(), alojam.getFechaIn(),
                alojam.getFechaOn(), alojam.getCiudadDest(), alojam.getImporteDiario(), alojam.isEstado(), alojam.getServicio()});
        }

    }

    private void cargarDatosPorFecha(LocalDate fecha) {
        Alojamiento_Data ald = new Alojamiento_Data();
        for (Alojamiento alojam : ald.buscarAlojamientoFechaTVB(fecha)) {

            modelo.addRow(new Object[]{alojam.getIdAlojamiento(), alojam.getTipoAlojamiento(), alojam.getFechaIn(),
                alojam.getFechaOn(), alojam.getCiudadDest(), alojam.getImporteDiario(), alojam.isEstado(), alojam.getServicio()});
        }
    }

    private void borrarFilas() {
        int filas = jtableBuscar.getRowCount() - 1;
        for (int f = filas; f >= 0; f--) {
            modelo.removeRow(f);
        }

    }

}
